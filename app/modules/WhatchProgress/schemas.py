from pydantic import BaseModel
from typing import Optional
from datetime import datetime

# ðŸ“¦ Schema base de progresso
class WatchProgressBase(BaseModel):
    time_seconds: float

    class Config:
        from_attributes = True  # âœ… CompatÃ­vel com Pydantic v2

# âž• Para criaÃ§Ã£o de um novo progresso
class WatchProgressCreate(WatchProgressBase):
    movie_id: Optional[int] = None
    episode_id: Optional[int] = None

# ðŸ”„ Para atualizaÃ§Ã£o de progresso existente
class WatchProgressUpdate(BaseModel):
    time_seconds: float

# âœ… Schema completo usado como resposta em save/get
class WatchProgressOut(WatchProgressBase):
    id: int
    user_id: int
    movie_id: Optional[int]
    episode_id: Optional[int]
    updated_at: datetime

    class Config:
        from_attributes = True

# ðŸ†• Schema para /progress/continuar (resumo de filmes)
class MovieProgressOut(BaseModel):
    movie_id: int
    title: str
    poster: str   # âœ… Adicionado
    time_seconds: float
    duration_seconds: float

    class Config:
        from_attributes = True
